# Generated by Django 4.0.8 on 2025-04-04 06:35

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(max_length=11, unique=True, validators=[django.core.validators.MinLengthValidator(11), django.core.validators.MaxLengthValidator(11)], verbose_name='手机号')),
                ('role', models.CharField(choices=[('C', '普通用户'), ('B', '服务提供者'), ('ADMIN', '管理员')], default='C', max_length=5, verbose_name='角色')),
                ('status', models.CharField(choices=[('正常', '正常'), ('冻结', '冻结'), ('注销', '注销')], default='正常', max_length=2, verbose_name='状态')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户管理',
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='AddressBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=255, verbose_name='详细地址')),
                ('is_default', models.BooleanField(default=False, verbose_name='默认地址')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '地址簿',
                'verbose_name_plural': '地址簿管理',
                'db_table': 'address_book',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('待支付', '待支付'), ('已支付', '已支付'), ('已取消', '已取消'), ('已完成', '已完成')], default='待支付', max_length=3, verbose_name='订单状态')),
                ('start_time', models.DateTimeField(verbose_name='开始时间')),
                ('end_time', models.DateTimeField(verbose_name='结束时间')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.addressbook', verbose_name='服务地址')),
            ],
            options={
                'verbose_name': '订单',
                'verbose_name_plural': '订单管理',
                'db_table': 'order',
            },
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(max_length=20, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(10)], verbose_name='昵称')),
                ('gender', models.CharField(choices=[('男', '男'), ('女', '女'), ('未知', '未知')], default='未知', max_length=2, verbose_name='性别')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='生日')),
                ('avatar', models.URLField(default='static/avatars/default_avatar.png', max_length=255, verbose_name='头像URL')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='info', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户信息',
                'verbose_name_plural': '用户信息管理',
                'db_table': 'user_info',
            },
        ),
        migrations.CreateModel(
            name='UserCertification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('real_name', models.CharField(max_length=50, verbose_name='真实姓名')),
                ('id_card', models.CharField(max_length=18, verbose_name='身份证号')),
                ('status', models.CharField(choices=[('待审核', '待审核'), ('通过', '通过'), ('驳回', '驳回')], default='待审核', max_length=3, verbose_name='认证状态')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='certification', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户实名认证',
                'verbose_name_plural': '用户实名认证管理',
                'db_table': 'user_certification',
            },
        ),
        migrations.CreateModel(
            name='ServiceProviderInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_area', models.CharField(max_length=100, verbose_name='服务范围')),
                ('introduction', models.CharField(max_length=100, verbose_name='个人简介')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='provider_info', to=settings.AUTH_USER_MODEL, verbose_name='服务提供者')),
            ],
            options={
                'verbose_name': '服务者信息',
                'verbose_name_plural': '服务者信息管理',
                'db_table': 'service_provider_info',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=50, verbose_name='服务名称')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='服务价格')),
                ('service_type', models.CharField(choices=[('保洁', '保洁'), ('维修', '维修')], max_length=2, verbose_name='服务类型')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='core.serviceproviderinfo', verbose_name='服务提供者')),
            ],
            options={
                'verbose_name': '服务项目',
                'verbose_name_plural': '服务项目管理',
                'db_table': 'service',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='评价内容')),
                ('status', models.CharField(choices=[('待审核', '待审核'), ('通过', '通过'), ('驳回', '驳回')], default='待审核', max_length=3, verbose_name='审核状态')),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='review', to='core.order', verbose_name='订单')),
            ],
            options={
                'verbose_name': '评价',
                'verbose_name_plural': '评价管理',
                'db_table': 'review',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='支付金额')),
                ('payment_method', models.CharField(choices=[('微信', '微信'), ('支付宝', '支付宝')], max_length=3, verbose_name='支付方式')),
                ('channel_fee', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='渠道手续费')),
                ('status', models.CharField(choices=[('成功', '成功'), ('失败', '失败')], max_length=2, verbose_name='支付状态')),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='core.order', verbose_name='订单')),
            ],
            options={
                'verbose_name': '支付记录',
                'verbose_name_plural': '支付记录管理',
                'db_table': 'payment',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='core.serviceproviderinfo', verbose_name='服务提供者'),
        ),
        migrations.AddField(
            model_name='order',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.service', verbose_name='服务项目'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL, verbose_name='用户'),
        ),
        migrations.CreateModel(
            name='Certification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificate_url', models.URLField(max_length=255, verbose_name='证书URL')),
                ('status', models.CharField(choices=[('待审核', '待审核'), ('通过', '通过'), ('驳回', '驳回')], default='待审核', max_length=3, verbose_name='审核状态')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certificates', to='core.serviceproviderinfo', verbose_name='服务提供者')),
            ],
            options={
                'verbose_name': '资质证书',
                'verbose_name_plural': '资质证书管理',
                'db_table': 'certification',
            },
        ),
        migrations.CreateModel(
            name='AfterSales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('退款', '退款'), ('返工', '返工'), ('投诉', '投诉')], max_length=2, verbose_name='售后类型')),
                ('status', models.CharField(choices=[('待处理', '待处理'), ('已解决', '已解决'), ('驳回', '驳回')], default='待处理', max_length=3, verbose_name='处理状态')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='after_sales', to='core.order', verbose_name='订单')),
            ],
            options={
                'verbose_name': '售后工单',
                'verbose_name_plural': '售后工单管理',
                'db_table': 'after_sales',
            },
        ),
        migrations.CreateModel(
            name='ProviderService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.serviceproviderinfo', verbose_name='服务提供者')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.service', verbose_name='服务项目')),
            ],
            options={
                'verbose_name': '服务者-服务关联',
                'verbose_name_plural': '服务者-服务关联管理',
                'db_table': 'provider_service',
                'unique_together': {('provider', 'service')},
            },
        ),
    ]
